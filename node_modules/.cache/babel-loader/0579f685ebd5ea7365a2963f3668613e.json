{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ashni\\\\Downloads\\\\timeslot-ui-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { _timeSlotList } from \"../utils/constant\";\nvar initState = {\n  slots: _timeSlotList\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SAVE_TIME_SLOT\":\n      {\n        var localData = state.slots.map(function (data, index) {\n          if (data._id === action.payload._slotId) {\n            var newData = _objectSpread({}, data, {\n              isBooked: true,\n              hasData: true,\n              info: action.payload\n            });\n\n            return newData;\n          } else {\n            return data;\n          }\n        });\n        window.localStorage.clear(); // set data into local Storage\n\n        localStorage.setItem(\"timeSlotList\", JSON.stringify(localData));\n        return _objectSpread({}, state, {\n          slots: localData\n        });\n      }\n\n    case \"GET_FROM_LOCAL_STORAGE\":\n      {\n        return _objectSpread({}, state, {\n          slots: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/ashni/Downloads/timeslot-ui-master/src/reducers/reducer.js"],"names":["_timeSlotList","initState","slots","reducer","state","action","type","localData","map","data","index","_id","payload","_slotId","newData","isBooked","hasData","info","window","localStorage","clear","setItem","JSON","stringify"],"mappings":";AAAA,SAASA,aAAT,QAA8B,mBAA9B;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEF;AADS,CAAlB;AAIA,eAAe,SAASG,OAAT,GAA4C;AAAA,MAA3BC,KAA2B,uEAAnBH,SAAmB;AAAA,MAARI,MAAQ;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AAAuB;AACrB,YAAMC,SAAS,GAAGH,KAAK,CAACF,KAAN,CAAYM,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACjD,cAAID,IAAI,CAACE,GAAL,KAAaN,MAAM,CAACO,OAAP,CAAeC,OAAhC,EAAyC;AACvC,gBAAIC,OAAO,qBACNL,IADM;AAETM,cAAAA,QAAQ,EAAE,IAFD;AAGTC,cAAAA,OAAO,EAAE,IAHA;AAITC,cAAAA,IAAI,EAAEZ,MAAM,CAACO;AAJJ,cAAX;;AAMA,mBAAOE,OAAP;AACD,WARD,MAQO;AACL,mBAAOL,IAAP;AACD;AACF,SAZiB,CAAlB;AAaAS,QAAAA,MAAM,CAACC,YAAP,CAAoBC,KAApB,GAdqB,CAgBrB;;AACAD,QAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAehB,SAAf,CAArC;AAEA,iCACKH,KADL;AAEEF,UAAAA,KAAK,EAAEK;AAFT;AAID;;AAED,SAAK,wBAAL;AAA+B;AAC7B,iCACKH,KADL;AAEEF,UAAAA,KAAK,EAAEG,MAAM,CAACO;AAFhB;AAID;;AAED;AACE,aAAOR,KAAP;AAlCJ;AAoCD","sourcesContent":["import { _timeSlotList } from \"../utils/constant\";\n\nconst initState = {\n  slots: _timeSlotList\n};\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case \"SAVE_TIME_SLOT\": {\n      const localData = state.slots.map((data, index) => {\n        if (data._id === action.payload._slotId) {\n          let newData = {\n            ...data,\n            isBooked: true,\n            hasData: true,\n            info: action.payload\n          };\n          return newData;\n        } else {\n          return data;\n        }\n      });\n      window.localStorage.clear();\n\n      // set data into local Storage\n      localStorage.setItem(\"timeSlotList\", JSON.stringify(localData));\n\n      return {\n        ...state,\n        slots: localData\n      };\n    }\n\n    case \"GET_FROM_LOCAL_STORAGE\": {\n      return {\n        ...state,\n        slots: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}